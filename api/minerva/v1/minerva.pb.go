// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.24.3
// source: minerva/v1/minerva.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ParseSqlTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sql string `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
}

func (x *ParseSqlTypeRequest) Reset() {
	*x = ParseSqlTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minerva_v1_minerva_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseSqlTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseSqlTypeRequest) ProtoMessage() {}

func (x *ParseSqlTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minerva_v1_minerva_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseSqlTypeRequest.ProtoReflect.Descriptor instead.
func (*ParseSqlTypeRequest) Descriptor() ([]byte, []int) {
	return file_minerva_v1_minerva_proto_rawDescGZIP(), []int{0}
}

func (x *ParseSqlTypeRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

type ParseSqlTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ParseSqlTypeReply_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ParseSqlTypeReply) Reset() {
	*x = ParseSqlTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minerva_v1_minerva_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseSqlTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseSqlTypeReply) ProtoMessage() {}

func (x *ParseSqlTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_minerva_v1_minerva_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseSqlTypeReply.ProtoReflect.Descriptor instead.
func (*ParseSqlTypeReply) Descriptor() ([]byte, []int) {
	return file_minerva_v1_minerva_proto_rawDescGZIP(), []int{1}
}

func (x *ParseSqlTypeReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ParseSqlTypeReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ParseSqlTypeReply) GetData() *ParseSqlTypeReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ParseSqlTypeReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SqlTypes []*ParseSqlTypeReply_Data_SqlTypes `protobuf:"bytes,1,rep,name=sql_types,json=sqlTypes,proto3" json:"sql_types,omitempty"`
}

func (x *ParseSqlTypeReply_Data) Reset() {
	*x = ParseSqlTypeReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minerva_v1_minerva_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseSqlTypeReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseSqlTypeReply_Data) ProtoMessage() {}

func (x *ParseSqlTypeReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_minerva_v1_minerva_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseSqlTypeReply_Data.ProtoReflect.Descriptor instead.
func (*ParseSqlTypeReply_Data) Descriptor() ([]byte, []int) {
	return file_minerva_v1_minerva_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ParseSqlTypeReply_Data) GetSqlTypes() []*ParseSqlTypeReply_Data_SqlTypes {
	if x != nil {
		return x.SqlTypes
	}
	return nil
}

type ParseSqlTypeReply_Data_SqlTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sql     string   `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	SqlType []string `protobuf:"bytes,2,rep,name=sql_type,json=sqlType,proto3" json:"sql_type,omitempty"`
	Risk    string   `protobuf:"bytes,3,opt,name=risk,proto3" json:"risk,omitempty"`
}

func (x *ParseSqlTypeReply_Data_SqlTypes) Reset() {
	*x = ParseSqlTypeReply_Data_SqlTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minerva_v1_minerva_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseSqlTypeReply_Data_SqlTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseSqlTypeReply_Data_SqlTypes) ProtoMessage() {}

func (x *ParseSqlTypeReply_Data_SqlTypes) ProtoReflect() protoreflect.Message {
	mi := &file_minerva_v1_minerva_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseSqlTypeReply_Data_SqlTypes.ProtoReflect.Descriptor instead.
func (*ParseSqlTypeReply_Data_SqlTypes) Descriptor() ([]byte, []int) {
	return file_minerva_v1_minerva_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *ParseSqlTypeReply_Data_SqlTypes) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *ParseSqlTypeReply_Data_SqlTypes) GetSqlType() []string {
	if x != nil {
		return x.SqlType
	}
	return nil
}

func (x *ParseSqlTypeReply_Data_SqlTypes) GetRisk() string {
	if x != nil {
		return x.Risk
	}
	return ""
}

var File_minerva_v1_minerva_proto protoreflect.FileDescriptor

var file_minerva_v1_minerva_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x76, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x76, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x76, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a,
	0x13, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x71, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x10, 0x05, 0x18, 0xc0, 0x84, 0x3d, 0x52, 0x03,
	0x73, 0x71, 0x6c, 0x22, 0x99, 0x02, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x71, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x76, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x71, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x9d, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x09, 0x73, 0x71, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x76, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x71,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x53, 0x71, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x08, 0x73, 0x71, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x1a, 0x4b, 0x0a, 0x08, 0x53, 0x71, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x71, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x71, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x69, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x69, 0x73, 0x6b, 0x32,
	0x7b, 0x0a, 0x07, 0x4d, 0x69, 0x6e, 0x65, 0x52, 0x76, 0x61, 0x12, 0x70, 0x0a, 0x0c, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x53, 0x71, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x2e, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x76, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x71, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x76, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x71,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x22, 0x15, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x76, 0x61, 0x2f, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x53, 0x71, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x39, 0x0a, 0x0a,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x76, 0x61, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x4d, 0x69, 0x6e, 0x65,
	0x72, 0x76, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x19, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x76, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x76,
	0x61, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_minerva_v1_minerva_proto_rawDescOnce sync.Once
	file_minerva_v1_minerva_proto_rawDescData = file_minerva_v1_minerva_proto_rawDesc
)

func file_minerva_v1_minerva_proto_rawDescGZIP() []byte {
	file_minerva_v1_minerva_proto_rawDescOnce.Do(func() {
		file_minerva_v1_minerva_proto_rawDescData = protoimpl.X.CompressGZIP(file_minerva_v1_minerva_proto_rawDescData)
	})
	return file_minerva_v1_minerva_proto_rawDescData
}

var file_minerva_v1_minerva_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_minerva_v1_minerva_proto_goTypes = []interface{}{
	(*ParseSqlTypeRequest)(nil),             // 0: minerva.v1.ParseSqlTypeRequest
	(*ParseSqlTypeReply)(nil),               // 1: minerva.v1.ParseSqlTypeReply
	(*ParseSqlTypeReply_Data)(nil),          // 2: minerva.v1.ParseSqlTypeReply.Data
	(*ParseSqlTypeReply_Data_SqlTypes)(nil), // 3: minerva.v1.ParseSqlTypeReply.Data.SqlTypes
}
var file_minerva_v1_minerva_proto_depIdxs = []int32{
	2, // 0: minerva.v1.ParseSqlTypeReply.data:type_name -> minerva.v1.ParseSqlTypeReply.Data
	3, // 1: minerva.v1.ParseSqlTypeReply.Data.sql_types:type_name -> minerva.v1.ParseSqlTypeReply.Data.SqlTypes
	0, // 2: minerva.v1.MineRva.ParseSqlType:input_type -> minerva.v1.ParseSqlTypeRequest
	1, // 3: minerva.v1.MineRva.ParseSqlType:output_type -> minerva.v1.ParseSqlTypeReply
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_minerva_v1_minerva_proto_init() }
func file_minerva_v1_minerva_proto_init() {
	if File_minerva_v1_minerva_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_minerva_v1_minerva_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseSqlTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minerva_v1_minerva_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseSqlTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minerva_v1_minerva_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseSqlTypeReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minerva_v1_minerva_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseSqlTypeReply_Data_SqlTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_minerva_v1_minerva_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_minerva_v1_minerva_proto_goTypes,
		DependencyIndexes: file_minerva_v1_minerva_proto_depIdxs,
		MessageInfos:      file_minerva_v1_minerva_proto_msgTypes,
	}.Build()
	File_minerva_v1_minerva_proto = out.File
	file_minerva_v1_minerva_proto_rawDesc = nil
	file_minerva_v1_minerva_proto_goTypes = nil
	file_minerva_v1_minerva_proto_depIdxs = nil
}
